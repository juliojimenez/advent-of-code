(defvar *input* nil)

(defun load-input (filename)
  (with-open-file (stream filename)
    (with-standard-io-syntax
      (setf *input* (loop for line = (read-line stream nil)
			  while line
			  collect (parse-integer line :junk-allowed t))))))

(let ((change -1)
      (current 0))
  (progn
    (load-input "~/code/advent-of-code/2021/day-1/input.txt")
    (dolist (item *input*)
      (if (>= item current) (progn
			      (incf change 1)))
      (setf current item))
    (print change)))

(let ((change -1)
      (current 0)
      (sliding-window ()))
  (progn
    (load-input "~/code/advent-of-code/2021/day-1/input.txt")
    (do ((i 0 (+ i 1)))
	((= i (list-length *input*)) change)
      (progn
	(dolist (item sliding-window)
	  (if (>= item current) (progn
				  (incf change 1)))
	  (setf current item))
	(print change)
	(push
	 (+
	  (aref *input* i)
	  (aref *input* (+ i 1))
	  (aref *input* (+ i 2)))
	 sliding-window)))))
     
